name: Deploy to Fly.io

on:
  push:
    branches:
      - main

jobs:
  deploy-sync:
    name: Deploy sync service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Set Zero secrets (convert pooler to direct connection)
        run: |
          # Get the connection string from secrets and convert pooler to direct if needed
          DB_URL="${{ secrets.SECRET_ZERO_DEV_PG }}"
          
          # Convert pooler to direct connection if needed
          if [[ "$DB_URL" == *"-pooler"* ]]; then
            echo "Converting pooler connection to direct connection..."
            DB_URL=$(echo "$DB_URL" | sed 's/-pooler//g')
            # Remove pooler-specific params and ensure sslmode
            DB_URL=$(echo "$DB_URL" | sed 's/[?&]pgbouncer=[^&]*//g')
            DB_URL=$(echo "$DB_URL" | sed 's/[?&]pool_timeout=[^&]*//g')
            if [[ "$DB_URL" != *"sslmode"* ]]; then
              if [[ "$DB_URL" == *"?"* ]]; then
                DB_URL="${DB_URL}&sslmode=require"
              else
                DB_URL="${DB_URL}?sslmode=require"
              fi
            fi
          fi
          
          # Set secrets for sync service
          flyctl secrets set \
            ZERO_UPSTREAM_DB="$DB_URL" \
            ZERO_AUTH_SECRET="${{ secrets.SECRET_ZERO_AUTH_SECRET }}" \
            ZERO_ADMIN_PASSWORD="${{ secrets.SECRET_ZERO_ADMIN_PASSWORD }}" \
            --app hominio-me-sync
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Deploy sync service (Zero cache server)
        run: |
          flyctl deploy --config fly.sync.toml --remote-only --app hominio-me-sync
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-main:
    name: Deploy main app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy main app
        run: |
          flyctl deploy --remote-only \
            --build-arg SECRET_NEON_PG_AUTH="${{ secrets.SECRET_NEON_PG_AUTH }}" \
            --build-arg SECRET_GOOGLE_CLIENT_ID="${{ secrets.SECRET_GOOGLE_CLIENT_ID }}" \
            --build-arg SECRET_GOOGLE_CLIENT_SECRET="${{ secrets.SECRET_GOOGLE_CLIENT_SECRET }}" \
            --build-arg SECRET_AUTH_SECRET="${{ secrets.SECRET_AUTH_SECRET }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

